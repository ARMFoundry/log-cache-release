#!/usr/bin/env python

import httplib
import json
import sys
import urlparse
import time

def get_health_data(url):
    u = urlparse.urlparse(url)
    host, path = u.netloc, u.path
    conn = httplib.HTTPConnection(host)
    conn.request("GET", path)
    response = conn.getresponse()
    body = response.read()
    return json.loads(body)

def build_payload(health_data, origin):
    points = [["log-cache.ingress", health_data["Ingress"]],
            ["log-cache.egress", health_data["Egress"]],
            ["log-cache.expired", health_data["Expired"]],
            ["log-cache.cache-period", health_data["CachePeriod"]]]

    now = time.time()
    return {
        "series": [{
            "metric": p[0],
            "points": [[now, p[1]]],
            "type": "gauge",
            "host": origin,
            } for p in points]
    }

def send_to_datadog(data, key):
    payload = json.dumps(data)
    datadog_host = "app.datadoghq.com"
    path = "/api/v1/series?api_key="+key
    conn = httplib.HTTPSConnection(datadog_host)
    conn.request("POST", path, payload, {"Content-Type": "application/json"})

    response = conn.getresponse()
    if response.status > 202:
        print "Failed to send data to Datadog"

def main():
    health_addr = sys.argv[1]
    origin = sys.argv[2]
    datadog_api_key = sys.argv[3]
    namespace = sys.argv[4]

    while True:
        health_data = get_health_data(health_addr)
        payload = build_payload(health_data[namespace], origin)
        send_to_datadog(payload, datadog_api_key)
        time.sleep(10)

if __name__ == "__main__":
    main()
